[project]
dynamic = [
    "version",
    "readme",
    "authors",
    "license",
    "dependencies",
    "optional-dependencies",
    "scripts",
]
name = "columnflow"
description = "columnflow"
requires-python = ">=3.9, <3.12"
keywords = [
    "physics",
    "analysis",
    "experiment",
    "columnar",
    "vectorized",
    "law",
    "order",
    "luigi",
    "workflow",
    "automation",
    "lhc",
    "cern"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
]

[tool.setuptools.dynamic]
dependencies={file = ["sandboxes/cf.txt"]}
readme = {file = ["README.md"], content-type="text/markdown"}
optional-dependencies={"dev" = {file = ["sandboxes/dev.txt"]}, "columnar"= {file = ["sandboxes/columnar.txt"]}, "ml_tf"= {file = ["sandboxes/ml_tf.txt", "sandboxes/columnar.txt"]}, "docs"= {file = ["docs/requirements.txt", "sandboxes/columnar.txt"]}}
# optional-dependencies.columnar= {file = ["sandboxes/columnar.txt"]}
# optional-dependencies.ml-tf= {file = ["sandboxes/ml-tf.txt"]}

[tool.setuptools.packages.find]
where = ["columnflow"]  # list of folders that contain the packages (["."] by default)

[project.urls]
Repository = "https://github.com/columnflow/columnflow"
Documentation = "https://columnflow.readthedocs.io/latest"

[tool.unidep]
name = "columnflow"
target = "${CF_SOFTWARE}/columnflow"
channels=[
    "conda-forge",
]
dependencies = [
    {conda = 'libgcc:linux'},
    {conda = "bash"},
    {conda = 'zsh:linux'},
    {conda = "python"},
    {conda = "git"},
    {conda = "git-lfs"},
    {conda = "gfal2"},
    {conda = "gfal2-util"},
    {conda = "python-gfal2"},
    {conda = 'myproxy:linux'},
    {conda = "conda-pack"},
    {conda = "unidep[all]"},
    {conda = "uv"}
]
local-dependencies = {file = ["sandboxes/cf.txt"]}
optional-dependencies={"dev" = {file = ["sandboxes/dev.txt"]}, "columnar"= {file = ["sandboxes/columnar.txt"]}, "ml_tf"= {file = ["sandboxes/ml_tf.txt", "sandboxes/columnar.txt"]}, "docs"= {file = ["docs/requirements.txt"]}}

platforms = [
    "linux-64",
    "linux-ppc64le",
    "linux-aarch64",
    "osx-64",
    "osx-arm64"
]
changeps1 = false
always_yes = true


[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"


[tool.pdm]
distribution = true

[tool.ruff]


exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

target-version = "py39"
line-length = 120


[tool.ruff.lint]
ignore = [
    "E402",
    "E722",
    "E731",
    "Q003",
]
select = [
    "E",
    "F",
    "Q",
    "W",
    "NPY201",
]

flake8-quotes.inline-quotes = "double"
pydocstyle.convention = "numpy"
